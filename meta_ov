
> sce.ll
$ov1
An object of class Seurat 
33533 features across 1102 samples within 1 assay 
Active assay: RNA (33533 features, 0 variable features)

$ov2
An object of class Seurat 
33533 features across 1244 samples within 1 assay 
Active assay: RNA (33533 features, 0 variable features)

$ov3
An object of class Seurat 
33533 features across 1071 samples within 1 assay 
Active assay: RNA (33533 features, 0 variable features)

$ov4
An object of class Seurat 
33533 features across 1108 samples within 1 assay 
Active assay: RNA (33533 features, 0 variable features)

$ov5
An object of class Seurat 
33533 features across 3451 samples within 1 assay 
Active assay: RNA (33533 features, 0 variable features)

$ov6
An object of class Seurat 
33533 features across 1909 samples within 1 assay 
Active assay: RNA (33533 features, 0 variable features)

rm(ov1,ov2,ov3,ov4,ov5,ov6,scRNA1,scRNA2,scRNA3,scRNA4,scRNA5,scRNA6)

#^MT，^HB, nCount, nRNA
#1.
percent_mito=rownames(sce.obj)[grep("^MT-", rownames(sce.obj))] 
sce.obj=PercentageFeatureSet(sce.obj, "^MT-", col.name = "percent_mito")
seu.obj <- PercentageFeatureSet(seu.obj, pattern = "^HBA|^HBB", col.name = "percent_hb")
##2.
pbmc[["percent.mt"]] <- PercentageFeatureSet(object = pbmc, pattern = "^MT-")
VlnPlot(object = sce.obj, features = 'pMT', group.by = "orig.ident", pt.size = 0)
qc<- c("nFeature_RNA", "nCount_RNA", "percent_mito", "percent_hb")
for (i in seq_along(qc)){
  print(VlnPlot(object = sce.obj, features = qcparams[i], group.by = "orig.ident", pt.size = 0))
}
VlnPlot(sce.obj, features = c("nFeature_RNA", "nCount_RNA",  "percent_hb", "percent_mito"), pt.size = 0, group.by = "orig.ident", ncol = 1, log = T)
ggsave2("FigureS1A,C.pdf")

####
nFeature_lower <- 600

###Normalize and scale the data
sce.obj <- subset(sce.obj, subset = nFeature_RNA > nFeature_lower)

# Dimensionality reduction
sce.obj= FindVariableFeatures(sce.obj)
sce.obj= ScaleData(sce.obj,  vars.to.regress = c("nFeature_RNA", "percent_mito"))
sce.obj= RunPCA(sce.obj, npcs = 20)
ElbowPlot(seu.obj)

sce.obj= RunUMAP(sce.obj, dims = 1:10)



Fif1.
DimPlot(sce.obj, reduction = "umap", group.by = "CCA_snn_res.0.8",cols = c(colors),pt.size = 1,label=T,label.size =5)+ theme(panel.border = element_rect(colour="black",fill=NA,size =1),legend.position="bottom")

genes_to_check = c(
    'PTPRC',
    'CD38','TNFRSF17','IGHG1','IGHG4',##plasmaB
    "GZMB","IRF8",##NK
    "CCR7", 'SELL' , 'TCF7',##NaiveT
    'TPSAB1' , 'TPSB2', ##mast
    'CD163', 'CD14', ##m
    "PDPN",'FGF7','MME', ##fib
    "EPCAM","KRT19","KRT8","KRT18", ##epi
    'ACTA2','RBP1', 'PECAM1', 'VWF',##endo              
     'CD3D', 'CD3E', 'CD8A', 
    'CD79A', 'MS4A1')

DotPlot(sce.all,features=genes_to_check, assay = 'RNA',
        cols=c("white","forestgreen"),
        group.by = "celltype")+
    RotatedAxis()+
    theme_test()+
    theme(axis.text=element_text(size=10,face="bold"),
          axis.title=element_blank(),
          legend.position="bottom",
          legend.text=element_text(size=10),
          legend.title=element_text(size=10,face="bold"),
          axis.text.x=element_text(angle = 90, hjust = 1, vjust = .5))+
    theme(panel.border = element_rect(colour="black",fill=NA,size = 2))
    
Fig2.

Fig 2A

table(sce.all@meta.data$celltype)
###
      B   CD8+T    endo     epi    ESCs   fibro   Macro    mast    MSCs  NaiveT 
    397     400     186    4015     664    2257     720      37     200     548 
plasmaB unkown1 unkown2 
    346      67      48 
sub1<- subset(sce.all,celltype==c('fibro'))

table(sub1@meta.data$CCA_snn_res.0.8)
###
  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 
  0   0   0 742   0 686   0 665   0   0   0   0   0   0   0 164   0   0   0 
DimPlot(sub1,reduction = "umap",pt.size = 1, group.by = "CCA_snn_res.0.8",cols = c(color[c(4,6,8,16)]))

Fig 2B

####geneset要去GSEA官网去下载，整理

subcluster = c(3,5,7,15)
sub <- subset(sce.all, idents = subcluster)
df.data <- GetAssayData(object = sub, slot = "data")

##data是normalized数据，count是原始数据，这里选择标准化的就行

table(sub@meta.data$CCA_snn_res.0.8)
group <- data.frame(umi = names(Idents(sub)), 
      cluster = as.character(sub@meta.data$CCA_snn_res.0.8), 
      stringsAsFactors = F)
###
  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 
  0   0   0 742   0 686   0 665   0   0   0   0   0   0   0 164   0   0   0 
##data是normalized数据，count是原始数据，这里选择标准化的就行

table(sub@meta.data$CCA_snn_res.0.8)
 15   3   5   7 
164 742 686 665 
gsvascore <- gsva(data.matrix(df.data), genelist, parallel.sz = 2)
> gsvascore[1:4, 1:4]
                                 AACTATAGAACA_1 AAGAGCGATCAT_1 GACGCCTGGCGC_1 AAACGTTCCCGT_1
HALLMARK_TNFA_SIGNALING_VIA_NFKB     -0.2137329     0.26014836    -0.33093764    -0.01510876
HALLMARK_HYPOXIA                     -0.3319224     0.07401125    -0.23909254     0.05659697
HALLMARK_CHOLESTEROL_HOMEOSTASIS     -0.3293504     0.50311276     0.24574388    -0.02610687
HALLMARK_MITOTIC_SPINDLE              0.1383315    -0.08595795    -0.05530312    -0.13177052
clu <- HeatmapAnnotation(Cluster = df.group$cluster)
Heatmap(as.matrix(gsvascore),
cluster_rows = T,
cluster_columns = T,
show_column_names = F,
top_annotation = clu,
column_split = df.group$cluster,
row_names_gp = gpar(fontsize = 8),
row_names_max_width = max_text_width(rownames(gsvascore),
gp = gpar(fontsize = 8)))


##Fig 2C

VlnPlot(sub_pbmc, features = "MMP11", pt.size = 0, ncol = 1,col=c("#2b2568","#806b8c","#3a9bda","#4169E1"))
+scale_x_discrete("")+
theme(axis.text.x.bottom = element_blank(),panel.border = element_rect(colour="black",fill=NA,size = 1))

##Fig3

fpkm=read.table('TCGA-OV.htseq_fpkm .tsv.gz',header = T,row.names = 1)
fpkm=2^fpkm-1
fpkmToTpm <- function(fpkm)
{
    exp(log(fpkm) - log(sum(fpkm)) + log(1e6))
}
tpms <- apply(fpkm,2,fpkmToTpm)
exp=tpms
library(stringr)
rownames(exp)=unlist(str_split(rownames(exp),"[.]",simplify=T))[,1]
table(rownames(exp) %in% mRNA_anno$Ensembl_ID)
mRNA_exp = exp[rownames(exp) %in% mRNA_anno$Ensembl_ID,]
tmp = data.frame(Ensembl_ID = rownames(exp))
x = dplyr::inner_join(tmp,mRNA_anno,by = "Ensembl_ID")

identical(tmp$Ensembl_ID,rownames(exp))
table(!duplicated(x$Symbol))
mRNA_exp = mRNA_exp[!duplicated(x$Symbol),]
x = x[!duplicated(x$Symbol),]
rownames(mRNA_exp) = x$Symbol
mRNA_exp[1:4,1:4]  
mRNA_exp = na.omit(mRNA_exp)

lnc_exp = exp[rownames(exp) %in% lnc_anno$Ensembl_ID,]
tmp = data.frame(Ensembl_ID = rownames(exp))
x = dplyr::inner_join(tmp,lnc_anno,by = "Ensembl_ID")
identical(tmp$Ensembl_ID,rownames(exp))
table(!duplicated(x$Symbol))
lnc_exp = lnc_exp[!duplicated(x$Symbol),]
x = x[!duplicated(x$Symbol),]
rownames(lnc_exp) = x$Symbol
lnc_exp[1:4,1:4]
lnc_exp = na.omit(lnc_exp)

imm_exp=mRNA_exp[rownames(mRNA_exp) %in% imm$V1,]
colnames(lnc_exp)=gsub('\\.','\\-',colnames(lnc_exp))


